{
	"name": "Extraction",
	"properties": {
		"activities": [
			{
				"name": "Extract from Source",
				"description": "This activity will copy data from the SQL source to the Raw zone.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "table_name",
						"value": "Field_Crop_Lookup"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.SourceQuery",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"dataIntegrationUnits": 16
				},
				"inputs": [
					{
						"referenceName": "ds_azure_sql_export",
						"type": "DatasetReference",
						"parameters": {
							"databaseServerName": {
								"value": "@pipeline().parameters.SourceServerName",
								"type": "Expression"
							},
							"databaseName": {
								"value": "@pipeline().parameters.SourceDatabaseName",
								"type": "Expression"
							},
							"kvSecretName": {
								"value": "@pipeline().parameters.SourcePwSecretName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_dynamics_csv",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.RawContainerName",
								"type": "Expression"
							},
							"directory_path_name": {
								"value": "@pipeline().parameters.TargetDirectoryPathName",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.TargetFileName",
								"type": "Expression"
							},
							"raw_adls_url_name": {
								"value": "@pipeline().parameters.RawAdlsUrlName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Log Extract Success",
				"description": "This will log the load success and resolve the log entry for this execution as a success.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Extract from Source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_sql_raw_log_success",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataExists": true,
						"SourceRowsCopied": {
							"value": "@activity('Extract from Source').output.rowsCopied",
							"type": "Expression"
						},
						"SourceRowsRead": {
							"value": "@activity('Extract from Source').output.rowsRead",
							"type": "Expression"
						},
						"DB_RawLoadLogKey": {
							"value": "@pipeline().parameters.DB_RawLoadLogKey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log Extract Failure",
				"description": "This will log the load failure.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Extract from Source",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_sql_raw_log_failure",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Message": {
							"value": "@activity('Extract from Source').Error.message",
							"type": "Expression"
						},
						"DB_RawLoadLogKey": {
							"value": "@pipeline().parameters.DB_RawLoadLogKey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Retry Extraction",
				"description": "This activity will copy data from the SQL source to the Raw zone.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Wait 30 Seconds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "table_name",
						"value": "Field_Crop_Lookup"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.SourceQuery",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"dataIntegrationUnits": 16
				},
				"inputs": [
					{
						"referenceName": "ds_azure_sql_export",
						"type": "DatasetReference",
						"parameters": {
							"databaseServerName": "@pipeline().parameters.SourceServerName",
							"databaseName": "@pipeline().parameters.SourceDatabaseName",
							"kvSecretName": "@pipeline().parameters.SourcePwSecretName"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_dynamics_csv",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.RawContainerName",
								"type": "Expression"
							},
							"directory_path_name": {
								"value": "@pipeline().parameters.TargetDirectoryPathName",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.TargetFileName",
								"type": "Expression"
							},
							"raw_adls_url_name": {
								"value": "@pipeline().parameters.RawAdlsUrlName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Log Retry Success",
				"description": "This will log the load success and resolve the log entry for this execution as a success.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Retry Extraction",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_sql_raw_log_success",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataExists": true,
						"SourceRowsCopied": {
							"value": "@activity('Retry Extraction').output.rowsCopied",
							"type": "Expression"
						},
						"SourceRowsRead": {
							"value": "@activity('Retry Extraction').output.rowsRead",
							"type": "Expression"
						},
						"DB_RawLoadLogKey": {
							"value": "@pipeline().parameters.DB_RawLoadLogKey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Wait 30 Seconds",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Log Extract Failure",
						"dependencyConditions": [
							"Skipped"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 30
				}
			}
		],
		"parameters": {
			"Current_ExtractHighDateUTC": {
				"type": "string"
			},
			"LoadType": {
				"type": "string"
			},
			"RawAdlsUrlName": {
				"type": "string"
			},
			"RawContainerName": {
				"type": "string"
			},
			"SourceDatabaseName": {
				"type": "string"
			},
			"SourcePwSecretName": {
				"type": "string"
			},
			"SourceSchemaName": {
				"type": "string"
			},
			"SourceServerName": {
				"type": "string"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"SourceSystemType": {
				"type": "string"
			},
			"SourceTableColumnList": {
				"type": "string"
			},
			"SourceTableIncrementalColumnName": {
				"type": "string"
			},
			"SourceTableName": {
				"type": "string"
			},
			"SourceUserName": {
				"type": "string"
			},
			"DB_DataSourceControlKey": {
				"type": "string"
			},
			"SourceQuery": {
				"type": "string"
			},
			"TargetDirectoryPathName": {
				"type": "string"
			},
			"TargetFileName": {
				"type": "string"
			},
			"DB_RawLoadLogKey": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Extraction/SQL Source"
		},
		"annotations": []
	}
}