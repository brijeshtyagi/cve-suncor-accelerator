{
	"name": "Extract Historical",
	"properties": {
		"description": "This pipeline will facilitate the data copy from the SQL source to the Raw zone.",
		"activities": [
			{
				"name": "lkp_SQL_LogLoadStart",
				"description": "This will log the load start.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[control].[DB_LogLoadStart_HistoricalLoad]",
						"storedProcedureParameters": {
							"Current_ExtractHighDateUTC": {
								"type": "DateTime",
								"value": {
									"value": "@pipeline().parameters.Current_ExtractHighDateUTC",
									"type": "Expression"
								}
							},
							"EnvironmentName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemName",
									"type": "Expression"
								}
							},
							"LoadType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.LoadType",
									"type": "Expression"
								}
							},
							"ProcessExecutionId": {
								"type": "Guid",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"ProcessPipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"ProcessPlatformName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceServerName",
									"type": "Expression"
								}
							},
							"RawAdlsUrlName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.RawAdlsUrlName",
									"type": "Expression"
								}
							},
							"RawContainerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.RawContainerName",
									"type": "Expression"
								}
							},
							"RawFileExtension": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.RawFileExtension",
									"type": "Expression"
								}
							},
							"SourceDBName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceDatabaseName",
									"type": "Expression"
								}
							},
							"SourceSchemaName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSchemaName",
									"type": "Expression"
								}
							},
							"SourceServerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceServerName",
									"type": "Expression"
								}
							},
							"SourceSystemName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemName",
									"type": "Expression"
								}
							},
							"SourceSystemType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemType",
									"type": "Expression"
								}
							},
							"SourceTableColumnList": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceTableColumnList",
									"type": "Expression"
								}
							},
							"SourceTableIncrementalColumnName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceTableIncrementalColumnName",
									"type": "Expression"
								}
							},
							"SourceTableName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceTableName",
									"type": "Expression"
								}
							},
							"HistoricalIncrement": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.HistorialIncrement",
									"type": "Expression"
								}
							},
							"HistoricalDateStart": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.HistoricalDateStart",
									"type": "Expression"
								}
							},
							"DB_DataSourceControlKey": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.DB_DataSourceControlKey",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_sql_control_db",
						"type": "DatasetReference",
						"parameters": {
							"database_name": {
								"value": "@pipeline().parameters.SourceDatabaseName",
								"type": "Expression"
							},
							"fully_qualified_domain_name": {
								"value": "@pipeline().parameters.RawAdlsUrlName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "lkp_check_for_data",
				"description": "This Lookup activity will execute the given query. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "lkp_SQL_LogLoadStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.SourceQueryDataCheck",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_sql_export",
						"type": "DatasetReference",
						"parameters": {
							"databaseServerName": "@activity('lkp_SQL_LogLoadStart').output.firstRow.SourceDatabaseName",
							"databaseName": "@activity('lkp_SQL_LogLoadStart').output.firstRow.databaseServerName",
							"kvSecretName": "sqlsuncordev2-sqladmin--password"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "if_data_exists",
				"description": "This If Condition activity will check to see if the Row_Count is greater than zero (0) from the lookup activity. If True, then copy data, if False, then close out log accordingly.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "lkp_check_for_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('lkp_check_for_data').output.firstRow.Row_Count,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "ep_SQL_Log_Success_No_New_Data",
							"description": "This will log the successful attempt even though no new or updated data was found.",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_sql_raw_log_success",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataExists": false,
									"SourceRowsRead": {
										"value": "@activity('lkp_check_for_data').output.firstRow.Row_Count",
										"type": "Expression"
									},
									"DB_RawLoadLogKey": {
										"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.DB_RawLoadLogKey",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "copy_SQL_source_to_raw",
							"description": "This activity will copy data from the SQL source to the Raw zone.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "table_name",
									"value": "Field_Crop_Lookup"
								}
							],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.SourceQuery",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false,
								"dataIntegrationUnits": 16
							},
							"inputs": [
								{
									"referenceName": "ds_azure_sql_export",
									"type": "DatasetReference",
									"parameters": {
										"databaseServerName": "@activity('lkp_SQL_LogLoadStart').output.firstRow.SourceDatabaseName",
										"databaseName": "@activity('lkp_SQL_LogLoadStart').output.firstRow.databaseServerName",
										"kvSecretName": "sqlsuncordev2-sqladmin--password"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_dynamics_csv",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.RawContainerName",
											"type": "Expression"
										},
										"directory_path_name": {
											"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.TargetDirectoryPathName",
											"type": "Expression"
										},
										"file_name": {
											"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.TargetFileName",
											"type": "Expression"
										},
										"raw_adls_url_name": {
											"value": "@pipeline().parameters.RawAdlsUrlName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "ep_SQL_LogLoadSuccess",
							"description": "This will log the load success and resolve the log entry for this execution as a success.",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "copy_SQL_source_to_raw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_sql_raw_log_success",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataExists": true,
									"SourceRowsCopied": {
										"value": "@activity('copy_SQL_source_to_raw').output.rowsCopied",
										"type": "Expression"
									},
									"SourceRowsRead": {
										"value": "@activity('copy_SQL_source_to_raw').output.rowsRead",
										"type": "Expression"
									},
									"DB_RawLoadLogKey": {
										"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.DB_RawLoadLogKey",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "ep_SQL_LogLoadFailure",
							"description": "This will log the load failure.",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "copy_SQL_source_to_raw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_sql_raw_log_failure",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Message": {
										"value": "@activity('copy_SQL_source_to_raw').Error.message",
										"type": "Expression"
									},
									"DB_RawLoadLogKey": {
										"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.DB_RawLoadLogKey",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "ep_SQL_Log_Failure",
				"description": "This will close the log and capture the failure from the Lookup activity.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "lkp_check_for_data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_sql_raw_log_failure",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Message": {
							"value": "@activity('lkp_check_for_data').Error.message",
							"type": "Expression"
						},
						"DB_RawLoadLogKey": {
							"value": "@activity('lkp_SQL_LogLoadStart').output.firstRow.DB_RawLoadLogKey",
							"type": "Expression"
						}
					}
				}
			}
		],
		"concurrency": 50,
		"parameters": {
			"Current_ExtractHighDateUTC": {
				"type": "string"
			},
			"LoadType": {
				"type": "string"
			},
			"RawAdlsUrlName": {
				"type": "string"
			},
			"RawContainerName": {
				"type": "string"
			},
			"RawFileExtension": {
				"type": "string"
			},
			"SourceDatabaseName": {
				"type": "string"
			},
			"SourcePwSecretName": {
				"type": "string"
			},
			"SourceSchemaName": {
				"type": "string"
			},
			"SourceServerName": {
				"type": "string"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"SourceSystemType": {
				"type": "string"
			},
			"SourceTableColumnList": {
				"type": "string"
			},
			"SourceTableIncrementalColumnName": {
				"type": "string"
			},
			"SourceTableName": {
				"type": "string"
			},
			"SourceUserName": {
				"type": "string"
			},
			"HistorialIncrement": {
				"type": "string"
			},
			"HistoricalDateStart": {
				"type": "string"
			},
			"DB_DataSourceControlKey": {
				"type": "string"
			},
			"HistoricalDateEnd": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Extraction/Historical Extraction"
		},
		"annotations": [],
		"lastPublishTime": "2023-07-20T17:24:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}