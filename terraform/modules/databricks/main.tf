locals {
  container_subnet_name = "${var.name}-container"
  host_subnet_name      = "${var.name}-host"
}

resource "azurerm_subnet" "container" {
  name                 = local.container_subnet_name
  resource_group_name  = var.resource_group_name
  virtual_network_name = var.virtual_network_name
  address_prefixes     = [var.container_subnet_cidr]
  service_endpoints    = ["Microsoft.KeyVault", "Microsoft.Sql", "Microsoft.Storage"]
  delegation {
    name = "dbxcontainerdelegation"
    service_delegation {
      name    = "Microsoft.Databricks/workspaces"
      actions = ["Microsoft.Network/virtualNetworks/subnets/join/action", "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action", "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]
    }
  }
}

resource "azurerm_subnet" "host" {
  name                 = local.host_subnet_name
  resource_group_name  = var.resource_group_name
  virtual_network_name = var.virtual_network_name
  address_prefixes     = [var.host_subnet_cidr]
  service_endpoints    = ["Microsoft.KeyVault", "Microsoft.Sql", "Microsoft.Storage"]
  delegation {
    name = "dbxhostdelegation"
    service_delegation {
      name    = "Microsoft.Databricks/workspaces"
      actions = ["Microsoft.Network/virtualNetworks/subnets/join/action", "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action", "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]
    }
  }
}

resource "azurerm_network_security_group" "nsg" {
  name                = "nsg-${var.name}"
  resource_group_name = var.resource_group_name
  location            = var.location
  tags                = var.tags

  lifecycle {
    ignore_changes = [
      tags["LastModifiedBy"],
      tags["LastModifiedTime"]
    ]
  }
}

resource "azurerm_subnet_network_security_group_association" "container_nsg" {
  subnet_id                 = azurerm_subnet.container.id
  network_security_group_id = azurerm_network_security_group.nsg.id
}

resource "azurerm_subnet_network_security_group_association" "host_nsg" {
  subnet_id                 = azurerm_subnet.host.id
  network_security_group_id = azurerm_network_security_group.nsg.id
}

resource "azurerm_databricks_workspace" "dbw" {
  name                = var.name
  resource_group_name = var.resource_group_name
  location            = var.location
  sku                 = var.sku
  tags                = var.tags

  managed_resource_group_name   = var.managed_resource_group_name
  public_network_access_enabled = true
  # network_security_group_rules_required = "NoAzureDatabricksRules" // use private endpoint

  custom_parameters {
    no_public_ip                                         = true
    virtual_network_id                                   = var.virtual_network_id
    private_subnet_name                                  = local.host_subnet_name
    private_subnet_network_security_group_association_id = azurerm_subnet_network_security_group_association.host_nsg.id
    public_subnet_name                                   = local.container_subnet_name
    public_subnet_network_security_group_association_id  = azurerm_subnet_network_security_group_association.container_nsg.id
  }

  lifecycle {
    ignore_changes = [
      tags["LastModifiedBy"],
      tags["LastModifiedTime"]
    ]
  }

  depends_on = [
    azurerm_subnet.container,
    azurerm_subnet.host,
    azurerm_network_security_group.nsg,
    azurerm_subnet_network_security_group_association.container_nsg,
    azurerm_subnet_network_security_group_association.host_nsg
  ]
}

resource "azurerm_databricks_access_connector" "connector" {
  name                = var.access_connector_name
  resource_group_name = var.resource_group_name
  location            = var.location
  tags                = var.tags

  identity {
    type = "SystemAssigned"
  }

  lifecycle {
    ignore_changes = [
      tags["LastModifiedBy"],
      tags["LastModifiedTime"]
    ]
  }
}

resource "azurerm_storage_container" "container" {
  name                  = var.metastore_container_name
  storage_account_name  = var.metastore_storage_account_name
  container_access_type = "private"
}

resource "azurerm_role_assignment" "role" {
  scope                = var.metastore_storage_account_id
  role_definition_name = "Storage Blob Data Contributor"
  principal_id         = azurerm_databricks_access_connector.connector.identity[0].principal_id
}
