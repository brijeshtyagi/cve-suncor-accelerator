# Pull existing Key Vault from Azure
data "azurerm_key_vault" "kv" {
  name                = var.key_vault_name
  resource_group_name = var.resource_group_name
}

resource "azurerm_data_factory" "adf" {
  name                = var.name
  resource_group_name = var.resource_group_name
  location            = var.location

  identity {
    type         = "SystemAssigned, UserAssigned"
    identity_ids = [var.user_mi_object_id]
  }

  # Azure DevOps Git Repository Setup
  dynamic "vsts_configuration" {
    for_each = var.ado_config != {} ? ["1"] : []
    content {
      account_name    = var.ado_config.account_name
      branch_name     = var.ado_config.branch_name
      project_name    = var.ado_config.project_name
      repository_name = var.ado_config.repository_name
      root_folder     = var.ado_config.root_folder
      tenant_id       = var.tenant_id
    }
  }

  # Github Repository Setup
  dynamic "github_configuration" {
    for_each = var.gh_config != {} ? ["1"] : []
    content {
      account_name    = var.gh_config.account_name
      branch_name     = var.gh_config.branch_name
      git_url         = var.gh_config.git_url
      repository_name = var.gh_config.repository_name
      root_folder     = var.gh_config.root_folder
    }
  }

  # Check: CKV_AZURE_104: "Ensure that Azure Data factory public network access is disabled"
  #Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-public-network-access-is-disabled
  public_network_enabled = false
  tags                   = var.tags

  lifecycle {
    ignore_changes = [
      tags["LastModifiedBy"],
      tags["LastModifiedTime"]
    ]
  }
}

# Assign ADF as a contributor to Storage Container for DLS to have correct access
# NOTE: Service Principal requires Owner Role to apply this permission
resource "azurerm_role_assignment" "adfcontributor" {
  scope                = var.storage_account_id
  principal_id         = azurerm_data_factory.adf.identity[0].principal_id
  role_definition_name = "Storage Blob Data Contributor"
}

// SP ADF User Assigned Identity access policy
resource "azurerm_key_vault_access_policy" "adfmi" {
  key_vault_id            = data.azurerm_key_vault.kv.id
  tenant_id               = var.tenant_id
  object_id               = azurerm_data_factory.adf.identity[0].principal_id
  certificate_permissions = var.adfmi_certificate_permissions
  key_permissions         = var.adfmi_key_permissions
  secret_permissions      = var.adfmi_secret_permissions
  storage_permissions     = var.adfmi_storage_permissions
}

