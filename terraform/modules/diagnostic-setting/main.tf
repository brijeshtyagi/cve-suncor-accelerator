data "azurerm_monitor_diagnostic_categories" "this" {
  resource_id = var.target_resource_id
}

resource "azurerm_monitor_diagnostic_setting" "this" {
  name                       = var.name
  target_resource_id         = var.target_resource_id
  log_analytics_workspace_id = var.log_id

  # Azure cannot have both "log categories" and "log category groups". This logic prefers groups to categories when both are present
  dynamic "enabled_log" {
    for_each = length(data.azurerm_monitor_diagnostic_categories.this.log_category_groups) == 0 ? toset(data.azurerm_monitor_diagnostic_categories.this.log_category_types) : toset([])
    content {
      category = enabled_log.value

      retention_policy {
        enabled = contains(var.log_categories, enabled_log.value)
        days    = var.retention_days != null ? var.retention_days : 0
      }
    }
  }

  dynamic "enabled_log" {
    for_each = length(data.azurerm_monitor_diagnostic_categories.this.log_category_groups) > 0 ? toset(data.azurerm_monitor_diagnostic_categories.this.log_category_groups) : toset([])

    content {
      category_group = enabled_log.value

      retention_policy {
        enabled = contains(var.log_category_groups, enabled_log.value)
        days    = var.retention_days != null ? var.retention_days : 0
      }
    }
  }

  dynamic "metric" {
    for_each = toset(data.azurerm_monitor_diagnostic_categories.this.metrics)

    content {
      category = metric.value
      enabled  = contains(var.metrics, metric.value)

      retention_policy {
        enabled = contains(var.metrics, metric.value)
        days    = var.retention_days != null ? var.retention_days : 0
      }
    }
  }

  lifecycle {
    ignore_changes = [metric]
  }
}
